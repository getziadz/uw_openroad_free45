export SV2V_FLOW_DIR :=$(realpath $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST)))))

##==============================================================================
##  _____   _______   __  ___ _              _____                  _      
## / __\ \ / /_  ) \ / / | __| |_____ __ __ |_   _|_ _ _ _ __ _ ___| |_ ___
## \__ \\ V / / / \ V /  | _|| / _ \ V  V /   | |/ _` | '_/ _` / -_)  _(_-<
## |___/ \_/ /___| \_/   |_| |_\___/\_/\_/    |_|\__,_|_| \__, \___|\__/__/
##                                                        |___/            
##==============================================================================

export SV2V_RUN_DIR ?=$(BUILD_DIR)/sv2v

# Flag to skip SV2V. Doing so implies that you have a well formed picked
# verilog and sdc file. You must set the variables PICKLED_V and PICKLED_SDC to
# properly skip sv2v.
export SV2V_SKIP ?=false

# Pre-pickled verilog and sdc. Can be used rather than running sv2v.
export PICKLED_V   ?=
export PICKLED_SDC ?=

#=======================================
# SV2V
#=======================================

ifeq ($(SV2V_SKIP),true)

sv2v: fakeram
	mkdir -p $(SV2V_RUN_DIR)/{logs,results,reports}
	cp $(PICKLED_V)   $(SV2V_RUN_DIR)/results/$(DESIGN_NAME).v
	cp $(PICKLED_SDC) $(SV2V_RUN_DIR)/results/$(DESIGN_NAME).sdc
	touch $(BUILD_VPATH)/$@

else

sv2v: fakeram
	@## Run bsg_sv2v. This will convert the design into a pickled verilog file
	@## that is compatible with a larger set of EDA tools. It will also expand
	@## our timing constraints and convert them to SDC format (if they were not
	@## already) also for EDA tool compatibility.
	mkdir -p $(SV2V_RUN_DIR)/{logs,results,reports}
	tclsh $(SV2V_FLOW_DIR)/scripts/bsg_target_design.generate_flist.tcl > $(SV2V_RUN_DIR)/design.flist
	(time $(MAKE) -C $(TOOLS_DIR)/bsg_sv2v \
		OUTPUT_DIR=$(SV2V_RUN_DIR)/results/run \
		DESIGN_FILELIST=$(SV2V_RUN_DIR)/design.flist \
		DESIGN_CONSTRAINTS_FILE=$(DESIGN_DIR)/tcl/constraints.tcl \
		DESIGN_NAME=$(DESIGN_NAME) \
		DESIGN_ELAB_NAME=$(DESIGN_ELAB_NAME) \
	) 2>&1 | tee -i $(SV2V_RUN_DIR)/logs/$@.log
	cp $(SV2V_RUN_DIR)/results/run/$(DESIGN_NAME).sv2v.v $(SV2V_RUN_DIR)/results/$(DESIGN_NAME).v
	-find $(FAKERAM_RUN_DIR) -name *.bb.v | xargs -I {} cat {} >> $(SV2V_RUN_DIR)/results/$(DESIGN_NAME).v
	-cp $(SV2V_RUN_DIR)/results/run/$(DESIGN_NAME).elab.v.sdc $(SV2V_RUN_DIR)/results/$(DESIGN_NAME).sdc
	! grep --color -i "^error" $(SV2V_RUN_DIR)/logs/$@.log
	touch $(BUILD_VPATH)/$@

endif

#=======================================
# COPY
#=======================================

SV2V_COPY_DEST ?=sv2v_copy

sv2v.copy: sv2v
	@## Copies the pickled verilog and expanded constraints file from the
	@## sv2v run to a new directory. Useful for packaging up designs to publish
	@## that have already been converted by sv2v. Use the SV2V_COPY_DEST variable
	@## to control the output directory.
	mkdir -p $(SV2V_COPY_DEST)
	cp $(SV2V_RUN_DIR)/results/$(DESIGN_NAME).v $(SV2V_COPY_DEST)/pickled.v
	-cp $(SV2V_RUN_DIR)/results/$(DESIGN_NAME).sdc $(SV2V_COPY_DEST)/constraints.sdc

#=======================================
# CLEAN
#=======================================

clean.sv2v: are_you_sure clean.synth
	@## Cleanup the sv2v target.
	rm -rf $(SV2V_RUN_DIR)
	rm -f $(BUILD_VPATH)/$(subst clean.,,$@)

